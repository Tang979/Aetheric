[
{
	"uri": "//localhost:1313/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Đề tài \u0026ldquo;Hiện đại hóa hệ thống backend cho game di động bằng các dịch vụ đám mây AWS\u0026rdquo; tập trung vào việc xây dựng một kiến trúc backend thực tiễn phục vụ trò chơi di động được phát triển bằng Unity 6. Đây là loại kiến trúc ứng dụng mô hình serverless cloud-native, không sử dụng máy chủ truyền thống, mà tận dụng các dịch vụ AWS có khả năng tự động mở rộng và tính phí theo mức sử dụng thực tế.\nƯu điểm của giải pháp Ưu điểm Mô tả Chi phí thấp Không cần thuê máy chủ EC2; toàn bộ dịch vụ là serverless, tối ưu chi phí vận hành khi số lượng người dùng thấp Tự động mở rộng Lambda, DynamoDB, và API Gateway có khả năng scale tự động theo số lượng người dùng, không cần DevOps Tích hợp trực tiếp với Unity Giao tiếp bằng UnityWebRequest, không cần SDK, dễ kiểm soát request/response Bảo mật mạnh mẽ Xác thực bằng JWT (Amazon Cognito), phân quyền bằng IAM theo nguyên tắc \u0026ldquo;Least Privilege\u0026rdquo; Dễ kiểm thử và debug Sử dụng Postman test API trước khi tích hợp với Unity; log lỗi tập trung tại CloudWatch Hạn chế và thách thức Hạn chế / Thách thức Mô tả Không có SDK chính thức cho Unity 6 Phải tự ký AWS Signature V4 thủ công hoặc dùng JWT; dễ phát sinh lỗi xác thực nếu sai định dạng Lập trình viên phải hiểu kỹ về AWS IAM, Security Token Nếu không nắm rõ quyền, rất dễ cấu hình sai, gây lỗi bảo mật hoặc không truy cập được dữ liệu Khó mô phỏng backend offline Vì server phụ thuộc vào nhiều dịch vụ cloud, không dễ mô phỏng toàn bộ offline trong quá trình phát triển Chi phí có thể tăng khi scale lớn Dù chi phí thấp ở giai đoạn đầu, nhưng nếu lên hàng chục ngàn user, cần đánh giá lại mô hình lưu trữ/tối ưu API Đề tài phù hợp với ai? Lập trình viên game muốn học về kiến trúc cloud thực tế, dễ áp dụng cho game mobile. Nhóm sinh viên muốn xây dựng MVP nhanh, không cần tốn công DevOps. Người học AWS cần một bài toán \u0026ldquo;real-world\u0026rdquo; để thực hành Lambda, Cognito, API Gateway, DynamoDB một cách liền mạch và có ý nghĩa. "
},
{
	"uri": "//localhost:1313/vi/1-introduce/1.1-introduce-services/",
	"title": "Giới thiệu các dịch vụ sử dụng",
	"tags": [],
	"description": "",
	"content": "Dịch vụ Amazon Cognito Amazon Cognito là một dịch vụ của AWS giúp quản lý và xác thực người dùng một cách an toàn mà không cần tự xây dựng hệ thống đăng ký, đăng nhập, hay xử lý mật khẩu. Cognito hỗ trợ đăng nhập bằng email, số điện thoại, mạng xã hội (Google, Facebook, Apple), hoặc tài khoản doanh nghiệp thông qua SAML, đồng thời sử dụng token bảo mật theo chuẩn OAuth2 để xác thực khi truy cập các dịch vụ backend.\nCognito cho phép quản lý người dùng tập trung thông qua IAM, hỗ trợ xác thực đa yếu tố (MFA), phân quyền truy cập theo nhóm và cung cấp khả năng mở rộng linh hoạt không giới hạn người dùng. Ngoài ra, các sự kiện đăng nhập và lỗi cũng được ghi log để phục vụ kiểm tra và bảo mật\nVới việc sử dụng Amazon Cognito, bạn sẽ có được những ưu điểm sau: Không cần tự viết hệ thống đăng nhập, quên mật khẩu hay xác thực email. Hỗ trợ đăng nhập đa dạng: email, mạng xã hội, tài khoản doanh nghiệp. Quản lý user tập trung bằng IAM và phân quyền rõ ràng. Tích hợp dễ dàng với API Gateway, Lambda, DynamoDB, S3\u0026hellip; Ghi log hoạt động người dùng, tăng cường bảo mật. Tự động mở rộng quy mô mà không cần quản lý server. Với những ưu điểm trên, bạn có thể sử dụng Session Manager thay vì sử dụng kỹ thuật Bastion host giúp chúng ta tiết kiệm được thời gian và chi phí khi quản lý server Bastion.\nDịch vụ Amazon SES Amazon SES (Simple Email Service) là dịch vụ gửi email chuyên nghiệp của AWS, cho phép bạn gửi email tự động từ ứng dụng hoặc game mà không cần xây dựng hệ thống email server riêng. SES hỗ trợ gửi email thông báo, xác nhận, khôi phục mật khẩu, và thu thập phản hồi từ người dùng một cách nhanh chóng, bảo mật và đáng tin cậy.\nSES giúp bạn dễ dàng cấu hình để gửi email từ một địa chỉ tùy chọn (ví dụ: support@yourgame.com) và hỗ trợ xác thực SPF, DKIM nhằm đảm bảo email không bị đánh dấu spam. Ngoài ra, bạn có thể kết hợp với AWS Lambda hoặc API Gateway để gửi email từ client như Unity mà không lộ thông tin nhạy cảm.\nVới việc sử dụng Amazon SES, bạn sẽ có được những ưu điểm sau: Gửi email xác nhận, reset password, hoặc feedback tự động. Không cần dựng hoặc quản lý máy chủ gửi mail riêng. Tích hợp dễ dàng với các dịch vụ như Lambda, API Gateway, S3. Hỗ trợ xác thực tên miền để tăng độ tin cậy của email. Theo dõi được tỷ lệ gửi thành công, email bị từ chối hoặc báo spam. Chi phí thấp, có thể gửi hàng nghìn email mỗi tháng miễn phí (trong AWS). Với những ưu điểm trên, Amazon SES là một giải pháp hiệu quả, bảo mật và tiết kiệm để bạn xây dựng hệ thống gửi email trong game hoặc ứng dụng mà không cần lo lắng về hạ tầng gửi mail.\nDịch vụ Amazon DynamoDB Amazon DynamoDB là dịch vụ cơ sở dữ liệu NoSQL của AWS, cho phép bạn lưu trữ và truy xuất dữ liệu nhanh chóng, linh hoạt mà không cần quản lý hạ tầng máy chủ. Với DynamoDB, bạn có thể dễ dàng lưu các thông tin như tài khoản người chơi, điểm số, tiến độ game, vật phẩm, hoặc dữ liệu nâng cấp tháp trong game.\nDynamoDB hoạt động theo mô hình key-value và document, cho phép truy cập dữ liệu gần như tức thì, ngay cả khi có hàng triệu người chơi cùng lúc. Dịch vụ này tự động mở rộng quy mô và cung cấp khả năng sao lưu, phục hồi, đồng bộ dữ liệu đa vùng và kiểm soát truy cập chi tiết thông qua IAM.\nVới việc sử dụng Amazon DynamoDB, bạn sẽ có được những ưu điểm sau: Lưu trữ dữ liệu người chơi ổn định, truy xuất nhanh với độ trễ thấp. Không cần cài đặt, bảo trì hoặc mở rộng cơ sở dữ liệu thủ công. Tích hợp dễ dàng với Lambda, API Gateway và Cognito. Hỗ trợ truy vấn có điều kiện và chỉ số phụ để tăng tốc tìm kiếm. Có thể sao lưu, khôi phục và phân quyền truy cập rõ ràng. Dùng tốt cho cả backend game, mobile, web với chi phí tối ưu. Với những ưu điểm trên, DynamoDB là lựa chọn lý tưởng để lưu trữ dữ liệu game quy mô lớn, đảm bảo hiệu năng cao và tiết kiệm chi phí vận hành.\n"
},
{
	"uri": "//localhost:1313/vi/",
	"title": "Modernizing Mobile Game Backend with AWS Cloud Services",
	"tags": [],
	"description": "",
	"content": "Hiện đại hóa hệ thống backend cho game di động bằng các dịch vụ AWS Tổng quan Trong khuôn khổ workshop này, nhóm chúng tôi trình bày quá trình tích hợp các dịch vụ cốt lõi của AWS vào một dự án game di động thể loại thủ thành, được phát triển trên nền tảng Unity 6. Do Unity 6 đã ngừng hỗ trợ chính thức AWS SDK, chúng tôi xây dựng toàn bộ kiến trúc backend theo hướng serverless và thực hiện giao tiếp với các dịch vụ AWS thông qua REST API được ký bằng AWS Signature Version 4 hoặc xác thực bằng JWT từ Amazon Cognito.\nViệc cấu hình và tích hợp được thực hiện theo từng khối chức năng riêng biệt, đảm bảo hệ thống vừa an toàn, vừa có khả năng mở rộng và dễ dàng kiểm thử độc lập. Toàn bộ quá trình triển khai được thiết kế theo hướng thực chiến – ưu tiên hiệu quả, đơn giản, nhưng vẫn tuân thủ theo các nguyên tắc kiến trúc chuẩn của AWS (Well-Architected Framework).\nNội dung Giới thiệu Xác thực tài khoản Cognito Đẩy dữ liệu từ Unity lên Amazon DynamoDB "
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/3.1-public-instance/",
	"title": "Tạo bảng dữ liệu trên DynamoDB và cấu hình các phần cần thiết",
	"tags": [],
	"description": "",
	"content": " Truy cập vào giao diện quản trị của dịch vụ DynamoDB. Click chọn Create table. Nhập tên table mà bạn muốn tạo ở mục đầu tiên Table name. Nhập Partition key đây chính là primary key cho table của bạn bạn có thể chọn kiểu dữ liệu của key ở bên cạnh. Click Create table. Truy cập vào Cognito. Click chọn Identity pools. Click chọn Create identity pool. Chọn Authenticated access sau đó chọn những loại đăng nhập mà bạn đã cấu hình ở User pools sau đó chọn Next. Đặt tên cho IAM role name sau đó chọn Next. Ở đậy chúng ta sẽ chọn User pool ID mà bạn muốn xác thực và chọn App client ID sau đó chọn Next. Đặt tên cho Identity pool sau đó bạn có thể chọn Next xem lại các thông tin đã cấu hình và chọn Create identity pool. Tạo Policy cấp quyền cho Cognito tương tác với DynamoDB. Chọn Create plolicy. Chuyển sang chỉnh sửa Json và cập nhật lại quyền truy cập vào DynamoDB như sau: { \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34;: [ \u0026#34;dynamodb:GetItem\u0026#34;, \u0026#34;dynamodb:PutItem\u0026#34;, \u0026#34;dynamodb:UpdateItem\u0026#34; ], \u0026#34;Resource\u0026#34;: \u0026#34;arn:aws:dynamodb:[Region]:*:table/[Name table]\u0026#34; } ] } Sau đó chọn Next. Đặt tên cho Policy và Create policy. Truy cập vào giao diện quản trị của dịch vụ IAM Chọn Roles ở thanh trượt bên trái chọn vào Role mà bạn đã đặt tên lúc tạo Identity pool. Chọn Add permissions sau đó chọn Attach polichies. Tìm tên và chọn Policy mà bạn vừa tạo sau đó chọn Add permissions. Sau đó chọn tab Trust relationships chọn Edit tust policy. Cập nhật lại quyền mới như sau: { \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Principal\u0026#34;: { \u0026#34;Federated\u0026#34;: \u0026#34;cognito-identity.amazonaws.com\u0026#34; }, \u0026#34;Action\u0026#34;: \u0026#34;sts:AssumeRoleWithWebIdentity\u0026#34;, \u0026#34;Condition\u0026#34;: { \u0026#34;StringEquals\u0026#34;: { \u0026#34;cognito-identity.amazonaws.com:aud\u0026#34;: \u0026#34;[Identity pool ID]\u0026#34; }, \u0026#34;ForAnyValue:StringLike\u0026#34;: { \u0026#34;cognito-identity.amazonaws.com:amr\u0026#34;: \u0026#34;authenticated\u0026#34; } } } ] } "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste-copy/2.1-createuserpool/",
	"title": "Tạo user pool",
	"tags": [],
	"description": "",
	"content": " Mở Amazon Cognito cosole\nChọn User pools trên menu bên trái. Nhấp vào Create user pool. tại trang Set up resources for your application\nỞ phần Define your application chọn Mobile app Dưới phần Configure options chọn Emai, Username Ở dưới Required attributes for sign-up chọn Email Cuối cùng ấn Create User Directory Quay trở lại Amazon Cognito cosole click vào user pool mới tạo Ở bên trái phần Application click vào app client Ở **App clients and analytics ** chọn vào cái app clients name mới tạo trong App client chọn vào edit Ở trong Edit app client information chọn vào các mục sau\nChoice-based sign-in: ALLOW_USER_AUTH Sign in with username and password: ALLOW_USER_PASSWORD_AUTH Get new user tokens from existing authenticated sessions: ALLOW_REFRESH_TOKEN_AUTH rồi kéo xuống cuối chọn Save Change vậy là hoàn thành bước tạo User Pool\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste-copy/2.2-check_connection_to_unity/",
	"title": "kiểm tra kết nối đến unity",
	"tags": [],
	"description": "",
	"content": " Vào tài khoản mình mới tạo trong user pool, ở mục Overview copy ap-southeast-2 Trong phần app client user copy cái Client ID Vào trong project của mình, vào đoạn code sử lý trang Register và Confirm tạo ra 2 biến clientId và region. Gán cái client ID và region trong User pool của mình vô trong. Nhập thông tin của bạn vào và ấn register Sau khi Register thành công thì email sẽ gửi cho bạn 1 đoạn mã xác nhận, copy đoạn mã đó Quay lại vào phần Verify Email\nNhập mã Confirmation bạn đã ghi lại. Nhấp vào nút Submit Quay lại Amazon Cognito vào phần User trong User User Management Ấn vào user vừa mới tạo, kéo xuống phần User attributes sẽ thấy thông tin của mình "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste-copy/",
	"title": "Xác thực tài khoản bằng Amazon Cognito",
	"tags": [],
	"description": "",
	"content": "\rBạn cần tạo sẵn 1 Linux instance thuộc public subnet và 1 Window instance thuộc private subnet để thực hiện bài thực hành này.\nĐể tìm hiểu cách tạo user pool các bạn có thể tham khảo bài lab :\nXác thực với Amazon Cognito Để sử dụng System Manager để quản lý window instance nói riêng và các instance nói chung của chúng ta trên AWS, ta cần phải cung cấp quyền cho các instance của chúng ta có thể làm việc với System Manager.Trong phần chuẩn bị này, chúng ta cũng sẽ tiến hành tạo IAM Role để cấp quyền cho các instance có thể làm việc với System Manager.\nNội dung Tạo User Pool "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste-copy/2.3-clear/",
	"title": "Dọn dẹp",
	"tags": [],
	"description": "",
	"content": " Mở Amazon Cognito cosole\nChọn User pools trên menu bên trái. Chọn User pool - … vừa tạo trước đó. Nhấp vào nút Delete. Tại popup Delete user pool “User pool - …”?.\nChọn Delete Cognito domain … và Deactivate deletion protection. Nhập User pool - \u0026hellip; vào trường 2. To confirm deletion. Nhấp vào nút Delete "
},
{
	"uri": "//localhost:1313/vi/3-accessibilitytoinstances/",
	"title": "Đẩy dữ liệu từ Unity lên Amazon DynamoDB",
	"tags": [],
	"description": "",
	"content": "Trong phần này, chúng ta sẽ xây dựng quy trình cho phép client game Unity 6 gửi dữ liệu game (ví dụ: team tháp, cấp độ, tiến trình) lên Amazon DynamoDB, thông qua API Gateway và AWS Lambda, với lớp xác thực bảo mật sử dụng Amazon Cognito.\nDo Unity 6 không hỗ trợ AWS SDK, tất cả tương tác với backend được thực hiện bằng HTTP request thông qua UnityWebRequest. Vì vậy, tính bảo mật và kiểm soát truy cập phải được thực hiện nghiêm ngặt từ phía API.\nTrước khi có thể gửi và lưu dữ liệu, bạn cần cấu hình các dịch vụ backend, cấu hình User Pool (Amazon Cognito) ở phần trước đây là nơi quản lý người dùng, cung cấp JWT để xác thực với API Gateway.\nNội dung 3.1. Tạo bảng dữ liệu trên DynamoDB và cấu hình các phần cần thiết \\\n"
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]